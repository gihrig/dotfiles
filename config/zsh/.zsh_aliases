#!/usr/bin/env zsh

# Dump aliases
alias aliases="cat ~/.config/dotfiles/config/zsh/.zsh_aliases"

# reload zsh config
alias reload!="RELOAD=1 source $XDG_CONFIG_HOME/zsh/.zshrc"

# Filesystem aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....="cd ../../.."
alias .....="cd ../../../.."

# Helpers
alias grep='grep --color=auto'
alias df='df -h' # disk free, in Gigabytes, not bytes
alias du='du -h -c' # calculate disk usage for a folder

alias lpath='echo $PATH | tr ":" "\n"' # list the PATH separated by new lines

# Applications
alias ios='open -a /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app'

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Recursively delete `.DS_Store` files
alias cleanup="find . -name '*.DS_Store' -type f -ls -delete"
# remove broken symlinks
alias clsym="find -L . -name . -o -type d -prune -o -type l -exec rm {} +"


# use eza if available
if [[ -x "$(command -v eza)" ]]; then
  alias ll="eza --icons --git --long"
  alias l="eza --icons --git --all --long"
else
  alias l="ls -lah ${colorflag}"
  alias ll="ls -lFh ${colorflag}"
fi
alias la="ls -AF ${colorflag}"
alias lld="ls -l | grep ^d"
alias rmf="rm -rf"

# git aliases
alias gs='git s'
alias glog="git l"

# tmux aliases
alias ta='tmux attach'
alias tls='tmux ls'
alias tat='tmux attach -t'
alias tns='tmux new-session -s'

# use nvim, but don't make me think about it
if [[ -n "$(command -v nvim)" ]]; then
    alias vim="nvim"
    # shortcut to open vim and immediately update vim-plug and all installed plugins
    alias vimu="nvim --headless \"+Lazy! sync\" +qa"
    # immediately open to fugitive's status screen
    alias vimg="nvim +Ge:"
fi

# operation shortcuts
alias sha256='shasum --portable -a 256' # Usage: "sha256 myfile" or "echo -n your_desired_password | sha256" see man shasum
alias sha512='shasum --portable -a 512' # Usage: "sha512 myfile" or "echo -n your_desired_password | sha512" see man shasum

alias backup='~/.config/arkScripts/arkDump.sh'
alias restore='~/.config/arkScripts/arkLoad.sh'
alias prepbk='source ~/.config/iczScripts/prepbk.sh'
alias dump='~/.config/iczScripts/iczDump.sh'
alias load='~/.config/iczScripts/iczLoad.sh'
alias nginxctl='~/.config/iczScripts/iczNginx.sh'
alias gitrev='~/.config/iczScripts/gitrev.sh'
alias chkcollection='~/.config/iczScripts/iczChkCollection.sh'

alias ejectall='~/ejectall.sh'
alias stack='./stack.sh'

alias stats='git diff --stat HEAD^ HEAD'

alias sqlite='sqlite3'

alias dev="cargo leptos watch"
alias release="cargo leptos build --release"
alias e2e-test='cargo leptos end-to-end'
alias e2e-release='cargo leptos end-to-end --release'
alias e2e-report='open ./end2end/playwright-report/index.html'
alias lfmt='leptosfmt ./**/*.rs'

# See root cargo.toml [workspace.lints.clippy] table for project-wide rules
#  Flags Explained:
#  
#      --workspace: Ensures Clippy checks all crates in the workspace.
#      --all-targets: Checks all targets, including tests, examples, and benches.
#      --all-features: Enables all features to ensure comprehensive linting.
#      -- -D: enforce warnings as errors (could use "deny"

alias clippy="cargo clippy --workspace --all-targets"

# Cargo watch example files
cwe() {
  cargo watch -c -q -x "run --example $1"
}

# Start project after 'release' build from project root
start() {
    # Get the project name from current directory
    local proj_name=$(basename "$PWD")

    # Construct and execute the command
    ./target/release/$proj_name "$@"
}

# List all listening ports
listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}
